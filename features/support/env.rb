# IMPORTANT: This file is generated by cucumber-rails - edit at your own peril.
# It is recommended to regenerate this file in the future when you upgrade to a
# newer version of cucumber-rails. Consider adding your own code to a new file
# instead of editing this one. Cucumber will automatically load all features/**/*.rb
# files.

ENV["RAILS_ENV"] ||= 'test'
require File.expand_path(File.dirname(__FILE__) + '/../../spec/dummy/config/environment.rb')
ENV["RAILS_ROOT"] = Rails.root.to_s

require 'capybara/webkit'
require 'cucumber/rails'
require 'webmock/cucumber'
WebMock.allow_net_connect!

require 'faker'
require "#{File.dirname(__FILE__)}/../../spec/factories"
require "#{File.dirname(__FILE__)}/../../spec/support/login"
require "#{File.dirname(__FILE__)}/../../spec/support/valid_commit"
require "#{File.dirname(__FILE__)}/../../spec/monkeypatch"

GitlabEngine::Gitlab::Gitolite.skip = true

Devise.setup do |config|
  config.stretches = 1
end

module Cucumber
  module Rails
    class World < ActionController::IntegrationTest
      include GitlabEngine::Engine.routes.url_helpers
    end
  end
end

Capybara.javascript_driver = :webkit
Capybara.default_selector = :css

ActionController::Base.allow_rescue = false

begin
  DatabaseCleaner.strategy = :transaction
rescue NameError
  raise "You need to add database_cleaner to your Gemfile (in the :test group) if you wish to use it."
end

# You may also want to configure DatabaseCleaner to use different strategies for certain features and scenarios.
# See the DatabaseCleaner documentation for details. Example:
#
#   Before('@no-txn,@selenium,@culerity,@celerity,@javascript') do
#     # { :except => [:widgets] } may not do what you expect here
#     # as tCucumber::Rails::Database.javascript_strategy overrides
#     # this setting.
#     DatabaseCleaner.strategy = :truncation
#   end
#
#   Before('~@no-txn', '~@selenium', '~@culerity', '~@celerity', '~@javascript') do
#     DatabaseCleaner.strategy = :transaction
#   end
#

# Possible values are :truncation and :transaction
# The :transaction strategy is faster, but might give you threading problems.
# See https://github.com/cucumber/cucumber-rails/blob/master/features/choose_javascript_database_strategy.feature
Cucumber::Rails::Database.javascript_strategy = :truncation

