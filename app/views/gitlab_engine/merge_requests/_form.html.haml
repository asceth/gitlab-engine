= form_for [@project, @merge_request], :html => { :class => "new_merge_request form-horizontal" } do |f|
  -if @merge_request.errors.any?
    .alert-message.block-message.error
      %ul
        - @merge_request.errors.full_messages.each do |msg|
          %li= msg

  %h3.padded.cgray 1. Select Branches

  .row
    .span6
      .mr_branch_box
        %h5 From (Head Branch)
        .body
          .padded
            = f.label :source_branch, "From", :class => "control-label"
            .controls
              = f.select(:source_branch, @project.heads.map(&:name), { :include_blank => "Select branch" }, :style => "width:250px")
        .bottom_commit
          .mr_source_commit

    .span6
      .mr_branch_box
        %h5 To (Base Branch)
        .body
          .padded
            = f.label :target_branch, "To", :class => "control-label"
            .controls
              = f.select(:target_branch, @project.heads.map(&:name), { :include_blank => "Select branch" }, :style => "width:250px")
        .bottom_commit
          .mr_target_commit

  %h3.padded.cgray 2. Fill info
  .clearfix
    = f.label :assignee_id, "Assign to", :class => "control-label"
    .controls= f.select(:assignee_id, @project.users.all.collect {|p| [ p.name, p.id ] }, { :include_blank => "Select user" }, :style => "width:250px")

  .control-group
    = f.label :title, :class => "control-label"
    .controls= f.text_field :title, :class => "input-xxlarge pad", :maxlength => 255, :rows => 5

  .form-actions
    = f.submit 'Save', :class => "btn-primary btn"
    - if @merge_request.new_record?
      = link_to gitlab_engine.project_merge_requests_path(@project), :class => "btn" do
        Cancel
    - else
      = link_to gitlab_engine.project_merge_request_path(@project, @merge_request), :class => "btn" do
        Cancel



:javascript
  $(function(){
    $('select#merge_request_assignee_id').chosen();
    $('select#merge_request_source_branch').chosen();
    $('select#merge_request_target_branch').chosen();
    var source_branch = $("#merge_request_source_branch");
    var target_branch = $("#merge_request_target_branch");


    $.get("#{branch_from_project_merge_requests_path(@project)}", {ref: source_branch.val() });
    $.get("#{branch_to_project_merge_requests_path(@project)}", {ref: target_branch.val() });

    source_branch.live("change", function() {
      $.get("#{branch_from_project_merge_requests_path(@project)}", {ref: $(this).val() });
    });

    target_branch.live("change", function() {
      $.get("#{branch_to_project_merge_requests_path(@project)}", {ref: $(this).val() });
    });
  });

